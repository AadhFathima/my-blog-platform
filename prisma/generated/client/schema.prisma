generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  name      String?
  password  String?
  role      Role        @default(READER)
  posts     Post[]
  comments  Comment[]
  likes     Like[]
  saved     SavedPost[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Post {
  id        Int         @id @default(autoincrement())
  title     String
  slug      String      @unique
  content   String
  image     String?
  category  String
  author    User        @relation(fields: [authorId], references: [id])
  authorId  Int         @map("author_id")
  comments  Comment[]
  likes     Like[]
  saved     SavedPost[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  published Boolean     @default(false)
  tags      PostTag[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int      @map("post_id")
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int      @map("author_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int      @map("post_id")
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model SavedPost {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int      @map("post_id")
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Tag {
  id    Int       @id @default(autoincrement())
  name  String    @unique
  posts PostTag[]
}

model PostTag {
  post   Post @relation(fields: [postId], references: [id])
  postId Int
  tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  Int

  @@id([postId, tagId])
}

enum Role {
  ADMIN
  EDITOR
  READER
}
